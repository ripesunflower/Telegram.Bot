trigger:
  batch: true
  branches:
    exclude:
      - master
      - develop
      - gh-pages
  paths:
    exclude:
      - docs/*
      - "**/*.md"

pr:
  branches:
    exclude:
      - master
      - develop
      - gh-pages

variables:
  - template: variables.yml

stages:
  - stage: Build
    displayName: ðŸš§ Build
    # don't build and pack artifacts for PRs
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: Build
        displayName: Build with .NET Core SDK
        pool:
          vmImage: $(vmImage)
        steps:

          - task: UseDotNet@2
            displayName: Install .NET Core SDK
            inputs:
              version: $(sdkVersion)
              packageType: sdk

          - script: dotnet help
            displayName: Initialize .NET Core environment

          - task: DotNetCoreCLI@2
            displayName: Build project with CI version
            inputs:
              command: build
              projects: $(projectPath)
              arguments: >
                --configuration $(buildConfiguration)
                --version-suffix "$(ciVersionSuffix)"

          # DotNetCoreCLI@2 with pack ignores arguments input, resorting to bash here.
          # Quotes around output path are needed so backslashes aren't interpreted
          # as escape symbols effectively cutting them out.
          # Currently creating a package with semver 2.0 gives a warning about older
          # clients, that's fine. It can't be disabled without disabling all package analysing
          # during pack so we can just ignore it.
          - bash: >
              dotnet pack
              --no-build
              --output "$(Build.ArtifactStagingDirectory)/packages/ci"
              --configuration $(buildConfiguration)
              --version-suffix "$(ciVersionSuffix)"
              $(projectPath)
            displayName: Create CI nuget package

          - publish: $(Build.ArtifactStagingDirectory)/packages
            artifact: packages

  - stage: PublishArtifacts
    dependsOn: Build
    displayName: ðŸ“¤ Publish artifacts
    # don't build and pack artifacts for PRs
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - template: jobs/publish-artifacts.yml
        parameters:
          sdkVersion: $(sdkVersion)
          internalfeedName: $(internalfeedName)
          artifact: packages
          packages: $(Pipeline.Workspace)/packages/ci/*.*upkg
          vmImage: $(vmImage)

  - stage: UnitTest
    dependsOn: PublishArtifacts
    displayName: ðŸ§ª Unit test
    # don't forget to require a comment from a team member to build PRs from forks
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - template: jobs/run-unit-tests.yml
        parameters:
          sdkVersion: $(sdkVersion)
          buildConfiguration: $(buildConfiguration)
          projects: $(unitTestsProject)
          strategies:
            - Ubuntu: ubuntu-18.04

  - stage: IntegrationTests
    dependsOn: PublishArtifacts
    displayName: ðŸ§ª Integreation tests
    # don't forget to require a comment from a team member to build PRs from forks
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - template: jobs/run-integration-tests.yml
        parameters:
          vmImage: $(vmImage)
          sdkVersion: $(sdkVersion)
          buildConfiguration: $(buildConfiguration)
          projects: $(integrationTestsProject)
          arguments: --filter "Category!=Interactive"
